%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 4000 2000 
%%LanguageLevel: 2
%%Creator: CorelDRAW X7
%%Title: drone1.eps
%%CreationDate: Wed Jul 28 23:36:50 2021
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X7 Version 17.1.0.572
/EpsFile true def
%%BeginResource: procset wCorel17Dict 17.0 0
/wCorel17Dict 300 dict def wCorel17Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch 0 1 $fe length 1 sub{/encodingIndex xd dup
$fe encodingIndex get eq{$fe encodingIndex/.notdef put}if}for put 1 add}ifelse
}forall pop}if dup 256 dict dup/$met xd/Metrics exch put dup/FontMatrix get 0
get 1000 mul 1 exch div 3 index length 256 eq{0 1 255{dup $fe exch get dup
/.notdef eq{pop pop}{5 index 3 -1 roll get 2 index mul $met 3 1 roll put}
ifelse}for}if pop definefont pop pop}bd/CorelIsValidCharpath{pathbbox 3 -1 roll
sub abs 0.5 ge 3 1 roll sub abs 0.5 ge and}bd/@ftx{{currentpoint 3 -1 roll(0)
dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix
CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{$fil 3 eq{/@@txt
/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}{FillOverprint
safe_setoverprint FillColor/separate_set_color dexec{show}{pop}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix
currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel17Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 612 792
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 3999.99969 1999.99956 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
0.00000 1999.99956 m
3999.99969 1999.99956 L
3999.99969 0.00000 L
0.00000 0.00000 L
0.00000 1999.99956 L
@c
F

@rax %Note: Object
0.00000 -0.00028 2000.00013 1999.99956 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
0.00000 1999.99956 m
2000.00013 1999.99956 L
2000.00013 -0.00028 L
0.00000 -0.00028 L
0.00000 1999.99956 L
@c
F

@rax %Note: Object
2000.00013 -0.00028 4000.00025 1999.99956 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
0 0.56693 0.56693 0.00000 @w
4000.00025 1999.99956 m
2000.00013 1999.99956 L
2000.00013 -0.00028 L
4000.00025 -0.00028 L
4000.00025 1999.99956 L
@c
B

@rax %Note: Object
2471.02413 999.37417 2856.22157 1304.10652 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2851.89931 1304.10652 m
2851.89931 1304.10652 2834.89087 1245.80041 2785.39597 1222.73490 c
2735.90135 1199.66939 2563.18469 1128.60198 2563.18469 1128.60198 c
2563.18469 1128.60198 2449.74076 1088.43080 2474.57991 1037.76803 c
2499.41906 987.10526 2548.59619 1001.16567 2548.59619 1001.16567 c
2548.59619 1001.16567 2898.79654 1095.92079 2851.89931 1304.10652 C
@c
F

@rax %Note: Object
2842.98236 749.80998 3265.51351 1176.18491 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2842.98236 1167.74901 m
2842.98236 1167.74901 2911.02831 1152.37587 2940.97266 1097.26696 c
2970.91701 1042.15776 3064.60913 849.18302 3064.60913 849.18302 c
3064.60913 849.18302 3108.25672 724.76787 3194.65417 754.36101 c
3281.05191 783.95414 3264.18293 865.14038 3264.18293 865.14038 c
3264.18293 865.14038 3078.32939 1236.24227 2842.98236 1167.74901 C
@c
F

@rax %Note: Object
2794.95553 1316.18636 3043.38047 1499.53776 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
3043.38047 1343.58463 m
3043.38047 1343.58463 2957.49014 1335.87241 2941.73575 1391.78041 c
2925.98135 1447.68813 2892.77405 1516.65335 2835.46205 1495.69087 c
2778.15033 1474.72838 2798.44356 1435.75965 2798.44356 1435.75965 c
2798.44356 1435.75965 2855.09254 1247.28945 3043.38047 1343.58463 C
@c
F

@rax %Note: Object
3063.16460 1193.41559 3528.97625 1493.84551 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
3077.18334 1193.41559 m
3082.98189 1293.46923 3348.74920 1356.88025 3436.94041 1389.00813 c
3436.94041 1389.00813 3549.96709 1414.59959 3525.51146 1458.87420 c
3501.05556 1503.14854 3451.84157 1496.76917 3414.01805 1485.95244 c
3376.19452 1475.13543 2985.00066 1375.98888 3077.18334 1193.41559 C
@c
F

@rax %Note: Object
2906.39254 1199.29606 3003.41509 1296.59726 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2906.39254 1232.82567 m
2911.63805 1217.75074 2924.02261 1205.45178 2940.60699 1201.00819 c
2967.21780 1193.87764 2994.57241 1209.67115 3001.70296 1236.28195 c
3008.59455 1262.00183 2994.07209 1288.42469 2969.05861 1296.59726 C
2981.75811 1285.72611 2987.82482 1268.16690 2983.20775 1250.93622 c
2976.80173 1227.02910 2952.24548 1212.85134 2928.33836 1219.25735 c
2919.51014 1221.62287 2912.02016 1226.45991 2906.39254 1232.82567 C
@c
F

@rax %Note: Object
2923.36498 1241.90220 2964.44239 1283.09754 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2964.44239 1268.90164 m
2962.22145 1275.28384 2956.97820 1280.49109 2949.95679 1282.37244 c
2938.69020 1285.39134 2927.10898 1278.70469 2924.09008 1267.43839 c
2921.17209 1256.54882 2927.32072 1245.36217 2937.91096 1241.90220 C
2932.53420 1246.50454 2929.96573 1253.93868 2931.92050 1261.23392 c
2934.63269 1271.35587 2945.02932 1277.35824 2955.15099 1274.64605 c
2958.88876 1273.64457 2962.05987 1271.59654 2964.44239 1268.90164 C
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2558.05739 547.18384 m
2496.77320 547.18384 L
2496.77320 675.01134 L
2516.18995 675.01134 L
2516.18995 563.56668 L
2558.05739 563.56668 L
2558.05739 547.18384 L
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2641.35430 588.07389 m
2641.35430 597.04072 2639.36551 603.78265 2635.42139 608.33339 c
2631.47726 612.88413 2625.71301 615.14277 2618.12835 615.14277 c
2610.47622 615.14277 2604.54331 612.81694 2600.26214 608.13128 c
2595.98098 603.44561 2593.82353 596.63622 2593.82353 587.70312 c
2593.82353 583.42195 2594.39669 579.57902 2595.50901 576.17433 c
2596.62132 572.80337 2598.23962 569.93783 2600.32961 567.57827 c
2602.45332 565.25216 2605.01528 563.46576 2608.01546 562.21852 c
2611.01537 560.97128 2614.38661 560.33065 2618.12835 560.33065 c
2625.71301 560.33065 2631.47726 562.69049 2635.42139 567.44334 c
2639.36551 572.19647 2641.35430 579.07332 2641.35430 588.07389 c
@c
2660.36655 588.04016 m
2660.36655 581.63528 2659.35543 575.80356 2657.29918 570.54472 c
2655.27638 565.28589 2652.37739 560.80261 2648.63565 557.06088 c
2644.86019 553.35260 2640.30945 550.45361 2634.94942 548.43109 c
2629.58967 546.37483 2623.55556 545.36343 2616.84737 545.36343 c
2610.40876 545.36343 2604.54331 546.34110 2599.31820 548.32989 c
2594.09310 550.28523 2589.64356 553.08302 2585.96901 556.65638 c
2582.26101 560.26318 2579.42948 564.61181 2577.40696 569.76945 c
2575.41789 574.89335 2574.40677 580.62387 2574.40677 586.96129 c
2574.40677 593.73694 2575.41789 599.77106 2577.47414 605.13109 c
2579.49694 610.45710 2582.46340 614.97411 2586.30633 618.71613 c
2590.14926 622.42413 2594.83493 625.25565 2600.32961 627.21099 c
2605.79055 629.13231 2611.99304 630.10998 2618.90362 630.10998 c
2625.57808 630.10998 2631.44353 629.16605 2636.56743 627.24472 c
2641.72507 625.32312 2646.03997 622.55906 2649.54586 618.95197 c
2653.08520 615.31143 2655.74835 610.92907 2657.60249 605.70397 c
2659.45635 600.51260 2660.36655 594.61342 2660.36655 588.04016 c
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2719.05534 630.10998 m
2721.28025 630.10998 2723.43770 629.87386 2725.49395 629.36844 c
2727.58394 628.86274 2729.67392 628.22211 2731.76391 627.44683 C
2731.76391 612.04139 L
2729.53928 612.58082 2727.14570 612.95159 2724.65121 613.18772 c
2722.15672 613.42356 2719.79717 613.52476 2717.57225 613.52476 c
2715.07776 613.52476 2712.95405 612.98532 2711.20110 611.90674 c
2709.44816 610.79414 2708.06598 609.37852 2707.02113 607.55811 c
2705.97600 605.73770 2705.20072 603.64772 2704.72876 601.22069 c
2704.29052 598.82712 2704.05468 596.29890 2704.05468 593.66976 c
2704.05468 547.18384 L
2685.04214 547.18384 L
2685.04214 601.01830 l
2685.04214 603.44561 2684.94123 606.04101 2684.73883 608.73789 c
2684.53644 611.43477 2684.30060 614.03046 2683.99729 616.52494 c
2683.72743 619.05317 2683.39039 621.31181 2683.01962 623.40180 c
2682.68258 625.45805 2682.34554 627.10980 2682.00822 628.28957 C
2698.02057 628.28957 L
2698.35761 627.68296 2698.69465 626.90740 2699.03169 625.86255 c
2699.33528 624.85115 2699.67231 623.73883 2699.94189 622.52532 c
2700.24548 621.31181 2700.51506 619.99710 2700.78463 618.61493 c
2701.05449 617.23276 2701.25660 615.88431 2701.39153 614.56961 C
2702.36920 616.22164 2703.41405 617.94057 2704.52636 619.76098 c
2705.67269 621.54765 2706.95367 623.23313 2708.40302 624.78369 c
2709.81893 626.33452 2711.43694 627.61550 2713.15616 628.59288 c
2714.90910 629.60428 2716.86416 630.10998 2719.05534 630.10998 c
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2787.78954 615.34517 m
2781.45213 615.34517 2776.29449 613.76060 2772.31691 610.55830 c
2768.30532 607.35572 2765.67591 602.67005 2764.36120 596.53502 C
2807.24003 596.53502 L
2806.90299 602.67005 2805.08287 607.35572 2801.71162 610.55830 c
2798.34066 613.76060 2793.68872 615.34517 2787.78954 615.34517 c
@c
2745.55134 588.24227 m
2745.55134 594.47877 2746.56246 600.20929 2748.61871 605.36693 c
2750.64151 610.52457 2753.54050 614.94066 2757.24850 618.61493 c
2760.99024 622.25546 2765.44006 625.08728 2770.63143 627.10980 c
2775.85625 629.09858 2781.62079 630.10998 2788.02567 630.10998 c
2794.26189 630.10998 2799.75657 629.19978 2804.47597 627.41310 c
2809.16164 625.59269 2813.13950 622.99729 2816.37553 619.65978 c
2819.61156 616.32255 2822.00513 612.21005 2823.62315 607.32198 c
2825.24117 602.46794 2826.05017 596.97326 2826.05017 590.87169 c
2826.05017 582.78132 L
2763.95669 582.78132 L
2764.29402 579.41036 2765.17020 576.30898 2766.58611 573.44372 c
2768.00202 570.54472 2769.88961 568.08397 2772.31691 566.06145 c
2774.71020 564.00491 2777.54173 562.42063 2780.81178 561.24085 c
2784.04781 560.09480 2787.65490 559.52164 2791.59874 559.52164 c
2793.92485 559.52164 2796.35187 559.72375 2798.98129 560.16198 c
2801.57698 560.60022 2804.24013 561.20712 2806.97046 562.04986 c
2809.70107 562.85887 2812.43140 563.87027 2815.16202 565.08378 c
2817.89235 566.26356 2820.52176 567.64573 2823.01625 569.23002 C
2823.01625 554.26280 L
2818.02728 551.43128 2812.73499 549.24009 2807.17285 547.68954 c
2801.61071 546.13871 2795.27329 545.36343 2788.19405 545.36343 c
2781.58706 545.36343 2775.68787 546.34110 2770.42904 548.26243 c
2765.17020 550.21776 2760.68693 553.04929 2757.01266 556.72384 c
2753.30438 560.39811 2750.47285 564.91512 2748.51780 570.20769 c
2746.52872 575.49997 2745.55134 581.50035 2745.55134 588.24227 c
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2922.15685 547.18384 m
2903.14460 547.18384 L
2903.14460 597.37776 l
2903.14460 603.10828 2902.03228 607.49065 2899.84110 610.55830 c
2897.61619 613.62595 2894.27896 615.14277 2889.82913 615.14277 c
2887.77288 615.14277 2885.78409 614.83946 2883.79531 614.19883 c
2881.80624 613.59222 2879.95238 612.81694 2878.19943 611.87301 c
2876.48022 610.96280 2874.86220 609.95140 2873.41257 608.87282 c
2871.96293 607.79395 2870.74942 606.78283 2869.77203 605.87263 C
2869.77203 547.18384 L
2850.75950 547.18384 L
2850.75950 628.28957 L
2869.16513 628.28957 L
2869.56964 620.19921 L
2870.95181 621.37899 2872.50236 622.59279 2874.22157 623.80630 c
2875.90706 625.01981 2877.79493 626.09839 2879.81745 627.00860 c
2881.87370 627.91880 2884.03115 628.66035 2886.28980 629.23351 c
2888.54816 629.80668 2890.94173 630.10998 2893.43622 630.10998 c
2899.57124 630.10998 2904.66142 628.93020 2908.77420 626.57036 c
2912.88671 624.17707 2915.98809 620.94076 2918.11181 616.76079 C
2919.76356 618.34535 2921.61770 619.96337 2923.70769 621.58139 c
2925.76394 623.16567 2927.98885 624.61531 2930.34841 625.86255 c
2932.74170 627.10980 2935.23619 628.12120 2937.83187 628.93020 c
2940.42756 629.70548 2943.09071 630.10998 2945.78759 630.10998 c
2955.52970 630.10998 2962.74359 627.31191 2967.36180 621.68258 c
2972.01373 616.05298 2974.33956 608.13128 2974.33956 597.91720 c
2974.33956 547.18384 L
2955.32731 547.18384 L
2955.32731 597.37776 l
2955.32731 603.10828 2954.21499 607.49065 2952.02381 610.55830 c
2949.79890 613.62595 2946.52913 615.14277 2942.14677 615.14277 c
2939.92186 615.14277 2937.76469 614.77200 2935.67443 614.06419 c
2933.58444 613.32236 2931.66312 612.44589 2929.87644 611.40104 c
2928.08976 610.32217 2926.50548 609.17613 2925.08957 607.92888 c
2923.67395 606.68164 2922.52762 605.53559 2921.65115 604.49046 C
2921.78608 603.74891 2921.92101 602.70378 2922.02220 601.35562 c
2922.12312 600.00718 2922.15685 598.86085 2922.15685 597.95093 c
2922.15685 547.18384 L
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
3067.54724 547.18384 m
3048.13049 547.18384 L
3048.13049 675.01134 L
3067.54724 675.01134 L
3067.54724 547.18384 L
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
3119.32545 565.15124 m
3120.10072 564.47688 3121.11184 563.80280 3122.29191 563.12844 c
3123.47169 562.42063 3124.82013 561.81402 3126.37068 561.24085 c
3127.92123 560.70142 3129.64044 560.22945 3131.56205 559.85868 c
3133.44964 559.48791 3135.50589 559.31924 3137.66334 559.31924 c
3141.74239 559.31924 3145.38293 559.99361 3148.51805 561.30831 c
3151.68661 562.62302 3154.38350 564.51061 3156.60841 567.03883 c
3158.83332 569.53332 3160.55254 572.60098 3161.69858 576.20806 c
3162.84463 579.84860 3163.41780 583.92765 3163.41780 588.47839 c
3163.41780 592.75956 3162.87836 596.56876 3161.83351 599.93972 c
3160.78838 603.31068 3159.30501 606.14220 3157.34995 608.50205 c
3155.42863 610.82787 3153.10252 612.61455 3150.43937 613.86180 c
3147.77650 615.10904 3144.87723 615.74967 3141.70866 615.74967 c
3139.14671 615.74967 3136.75342 615.47981 3134.56224 614.90693 c
3132.37106 614.33376 3130.31480 613.59222 3128.46066 612.68202 c
3126.57279 611.77181 3124.88731 610.72668 3123.37049 609.61436 c
3121.85367 608.50205 3120.50523 607.38945 3119.32545 606.27713 C
3119.32545 565.15124 L
@c
3100.31291 628.28957 m
3118.92094 628.28957 L
3119.32545 621.07569 L
3122.49402 623.50271 3126.16828 625.62643 3130.38227 627.41310 c
3134.59597 629.19978 3139.48375 630.10998 3145.01216 630.10998 c
3150.33846 630.10998 3155.29370 629.19978 3159.91191 627.37937 c
3164.53011 625.59269 3168.50797 622.92983 3171.87893 619.39020 c
3175.21616 615.88431 3177.84557 611.50224 3179.76690 606.31087 c
3181.68850 601.11950 3182.63244 595.08539 3182.63244 588.24227 c
3182.63244 581.90485 3181.72224 576.14060 3179.86809 570.91550 c
3178.01395 565.65694 3175.35109 561.17339 3171.81146 557.43165 c
3168.30557 553.65619 3163.95723 550.75720 3158.83332 548.66721 c
3153.70942 546.61068 3147.87742 545.56583 3141.33789 545.56583 c
3137.25883 545.56583 3133.28126 546.03780 3129.40460 546.94800 c
3125.52794 547.85792 3122.15698 549.10517 3119.32545 550.58854 C
3119.32545 500.46208 L
3100.31291 500.46208 L
3100.31291 628.28957 L
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
3255.20929 569.97156 m
3255.20929 566.46595 3254.60268 563.22964 3253.38917 560.22945 c
3252.17565 557.22926 3250.32151 554.63357 3247.86076 552.44268 c
3245.40000 550.21776 3242.29861 548.49855 3238.55688 547.25131 c
3234.84860 546.00406 3230.50025 545.36343 3225.47726 545.36343 c
3220.62321 545.36343 3216.00501 545.97033 3211.65638 547.18384 c
3207.30775 548.43109 3203.63348 550.15030 3200.59956 552.40894 C
3200.59956 568.82551 L
3202.31877 567.64573 3204.20665 566.49969 3206.26290 565.35335 c
3208.35288 564.24104 3210.47660 563.26337 3212.63405 562.45436 c
3214.82523 561.61162 3216.94894 560.97128 3219.03893 560.46557 c
3221.16265 559.95987 3223.08397 559.72375 3224.87065 559.72375 c
3229.15181 559.72375 3232.28665 560.63395 3234.24198 562.48809 c
3236.23077 564.30850 3237.20844 566.53313 3237.20844 569.16255 c
3237.20844 570.54472 3237.00605 571.79197 3236.60154 572.87083 c
3236.23077 573.94942 3235.48923 574.99455 3234.41036 575.93820 c
3233.29805 576.88214 3231.81496 577.82608 3229.85962 578.73628 c
3227.90457 579.68022 3225.44381 580.65761 3222.40989 581.70274 c
3218.26337 583.21956 3214.79150 584.83757 3211.99342 586.48932 c
3209.19562 588.17509 3206.97071 590.02894 3205.28523 592.01773 c
3203.59975 594.04054 3202.41997 596.23172 3201.67814 598.55754 c
3200.97033 600.88365 3200.59956 603.44561 3200.59956 606.20967 c
3200.59956 609.74929 3201.37483 613.01906 3202.92567 615.95178 c
3204.47622 618.85077 3206.56620 621.37899 3209.22935 623.50271 c
3211.89222 625.59269 3215.02734 627.24472 3218.63443 628.39077 c
3222.20750 629.53682 3226.05043 630.10998 3230.12948 630.10998 c
3233.80375 630.10998 3237.44428 629.73921 3240.98391 629.03112 c
3244.55726 628.28957 3247.99540 627.04233 3251.36665 625.28939 C
3251.36665 610.49083 L
3248.13033 611.94047 3244.72564 613.15398 3241.15257 614.09792 c
3237.54548 615.07531 3234.00586 615.54728 3230.53398 615.54728 c
3226.45493 615.54728 3223.38728 614.67080 3221.29729 612.95159 c
3219.24104 611.23238 3218.19619 609.04120 3218.19619 606.41206 c
3218.19619 605.29946 3218.39830 604.22088 3218.83654 603.24321 c
3219.27477 602.26554 3220.01631 601.28816 3221.06145 600.37795 c
3222.10630 599.46775 3223.55594 598.52381 3225.41008 597.57987 c
3227.23020 596.60249 3229.59005 595.62482 3232.42157 594.64715 c
3236.36570 593.26526 3239.77039 591.81562 3242.63565 590.26507 c
3245.50091 588.71424 3247.86076 586.99502 3249.74835 585.07370 c
3251.60249 583.15209 3252.98466 580.96120 3253.86113 578.50016 c
3254.77134 576.03940 3255.20929 573.17414 3255.20929 569.97156 c
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
3276.07597 628.28957 m
3295.08822 628.28957 L
3295.08822 578.09565 l
3295.08822 572.43260 3296.26800 568.08397 3298.59411 564.98258 c
3300.95367 561.88120 3304.49329 560.33065 3309.21269 560.33065 c
3311.33641 560.33065 3313.39266 560.60022 3315.41518 561.10592 c
3317.40397 561.64535 3319.29184 562.35317 3321.07852 563.22964 c
3322.86491 564.13984 3324.51694 565.11751 3326.06750 566.19609 c
3327.61805 567.30869 3329.03395 568.42101 3330.28120 569.60079 C
3330.28120 628.28957 L
3349.29345 628.28957 L
3349.29345 547.18384 L
3330.88809 547.18384 L
3330.28120 555.27420 L
3328.89902 554.02696 3327.34847 552.81345 3325.62926 551.63367 c
3323.94378 550.45361 3322.02217 549.37502 3319.96592 548.46482 c
3317.87594 547.55461 3315.65102 546.81307 3313.25773 546.23991 c
3310.83071 545.66702 3308.30249 545.36343 3305.60561 545.36343 c
3295.52646 545.36343 3288.07644 548.06031 3283.28986 553.42006 c
3278.46926 558.78009 3276.07597 566.60060 3276.07597 576.88214 c
3276.07597 628.28957 L
@c
F

@rax %Note: Object
2496.77320 500.46208 3503.21244 675.01134 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
3451.02973 547.18384 m
3432.01748 547.18384 L
3432.01748 597.37776 l
3432.01748 603.10828 3430.90517 607.49065 3428.71398 610.55830 c
3426.48907 613.62595 3423.15184 615.14277 3418.70202 615.14277 c
3416.64576 615.14277 3414.65698 614.83946 3412.66819 614.19883 c
3410.67912 613.59222 3408.82526 612.81694 3407.07231 611.87301 c
3405.35310 610.96280 3403.73509 609.95140 3402.28545 608.87282 c
3400.83581 607.79395 3399.62230 606.78283 3398.64491 605.87263 C
3398.64491 547.18384 L
3379.63238 547.18384 L
3379.63238 628.28957 L
3398.03802 628.28957 L
3398.44252 620.19921 L
3399.82469 621.37899 3401.37524 622.59279 3403.09446 623.80630 c
3404.77994 625.01981 3406.66781 626.09839 3408.69033 627.00860 c
3410.74658 627.91880 3412.90403 628.66035 3415.16268 629.23351 c
3417.42104 629.80668 3419.81461 630.10998 3422.30910 630.10998 c
3428.44413 630.10998 3433.53430 628.93020 3437.64709 626.57036 c
3441.75959 624.17707 3444.86098 620.94076 3446.98469 616.76079 C
3448.63644 618.34535 3450.49058 619.96337 3452.58057 621.58139 c
3454.63682 623.16567 3456.86173 624.61531 3459.22129 625.86255 c
3461.61458 627.10980 3464.10907 628.12120 3466.70476 628.93020 c
3469.30044 629.70548 3471.96359 630.10998 3474.66047 630.10998 c
3484.40258 630.10998 3491.61647 627.31191 3496.23468 621.68258 c
3500.88661 616.05298 3503.21244 608.13128 3503.21244 597.91720 c
3503.21244 547.18384 L
3484.20019 547.18384 L
3484.20019 597.37776 l
3484.20019 603.10828 3483.08787 607.49065 3480.89669 610.55830 c
3478.67178 613.62595 3475.40202 615.14277 3471.01965 615.14277 c
3468.79474 615.14277 3466.63757 614.77200 3464.54731 614.06419 c
3462.45732 613.32236 3460.53600 612.44589 3458.74932 611.40104 c
3456.96265 610.32217 3455.37836 609.17613 3453.96246 607.92888 c
3452.54683 606.68164 3451.40050 605.53559 3450.52403 604.49046 C
3450.65896 603.74891 3450.79389 602.70378 3450.89509 601.35562 c
3450.99600 600.00718 3451.02973 598.86085 3451.02973 597.95093 c
3451.02973 547.18384 L
@c
F

@rax %Note: Object
471.02400 999.37417 856.22145 1304.10652 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
851.89918 1304.10652 m
851.89918 1304.10652 834.89074 1245.80041 785.39584 1222.73490 c
735.90123 1199.66939 563.18457 1128.60198 563.18457 1128.60198 c
563.18457 1128.60198 449.74063 1088.43080 474.57978 1037.76803 c
499.41893 987.10526 548.59606 1001.16567 548.59606 1001.16567 c
548.59606 1001.16567 898.79641 1095.92079 851.89918 1304.10652 C
@c
F

@rax %Note: Object
842.98224 749.80998 1265.51339 1176.18491 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
842.98224 1167.74901 m
842.98224 1167.74901 911.02819 1152.37587 940.97254 1097.26696 c
970.91688 1042.15776 1064.60901 849.18302 1064.60901 849.18302 c
1064.60901 849.18302 1108.25660 724.76787 1194.65405 754.36101 c
1281.05178 783.95414 1264.18280 865.14038 1264.18280 865.14038 c
1264.18280 865.14038 1078.32926 1236.24227 842.98224 1167.74901 C
@c
F

@rax %Note: Object
794.95540 1316.18636 1043.38035 1499.53776 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
1043.38035 1343.58463 m
1043.38035 1343.58463 957.49002 1335.87241 941.73562 1391.78041 c
925.98123 1447.68813 892.77392 1516.65335 835.46192 1495.69087 c
778.15020 1474.72838 798.44343 1435.75965 798.44343 1435.75965 c
798.44343 1435.75965 855.09241 1247.28945 1043.38035 1343.58463 C
@c
F

@rax %Note: Object
1063.16447 1193.41559 1528.97613 1493.84551 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
1077.18321 1193.41559 m
1082.98176 1293.46923 1348.74907 1356.88025 1436.94028 1389.00813 c
1436.94028 1389.00813 1549.96696 1414.59959 1525.51134 1458.87420 c
1501.05543 1503.14854 1451.84145 1496.76917 1414.01792 1485.95244 c
1376.19439 1475.13543 985.00054 1375.98888 1077.18321 1193.41559 C
@c
F

@rax %Note: Object
906.39241 1199.29606 1003.41496 1296.59726 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
906.39241 1232.82567 m
911.63792 1217.75074 924.02249 1205.45178 940.60687 1201.00819 c
967.21767 1193.87764 994.57228 1209.67115 1001.70283 1236.28195 c
1008.59443 1262.00183 994.07197 1288.42469 969.05849 1296.59726 C
981.75798 1285.72611 987.82469 1268.16690 983.20762 1250.93622 c
976.80161 1227.02910 952.24535 1212.85134 928.33824 1219.25735 c
919.51002 1221.62287 912.02003 1226.45991 906.39241 1232.82567 C
@c
F

@rax %Note: Object
923.36485 1241.90220 964.44227 1283.09754 @E
/$fm 0 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
964.44227 1268.90164 m
962.22132 1275.28384 956.97808 1280.49109 949.95666 1282.37244 c
938.69008 1285.39134 927.10885 1278.70469 924.08995 1267.43839 c
921.17197 1256.54882 927.32060 1245.36217 937.91083 1241.90220 C
932.53408 1246.50454 929.96561 1253.93868 931.92038 1261.23392 c
934.63257 1271.35587 945.02920 1277.35824 955.15087 1274.64605 c
958.88863 1273.64457 962.05975 1271.59654 964.44227 1268.90164 C
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
558.05726 547.18384 m
496.77307 547.18384 L
496.77307 675.01134 L
516.18983 675.01134 L
516.18983 563.56668 L
558.05726 563.56668 L
558.05726 547.18384 L
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
641.35417 588.07389 m
641.35417 597.04072 639.36539 603.78265 635.42126 608.33339 c
631.47713 612.88413 625.71288 615.14277 618.12822 615.14277 c
610.47609 615.14277 604.54318 612.81694 600.26202 608.13128 c
595.98085 603.44561 593.82340 596.63622 593.82340 587.70312 c
593.82340 583.42195 594.39657 579.57902 595.50888 576.17433 c
596.62120 572.80337 598.23950 569.93783 600.32948 567.57827 c
602.45320 565.25216 605.01515 563.46576 608.01534 562.21852 c
611.01524 560.97128 614.38649 560.33065 618.12822 560.33065 c
625.71288 560.33065 631.47713 562.69049 635.42126 567.44334 c
639.36539 572.19647 641.35417 579.07332 641.35417 588.07389 c
@c
660.36643 588.04016 m
660.36643 581.63528 659.35531 575.80356 657.29906 570.54472 c
655.27625 565.28589 652.37726 560.80261 648.63553 557.06088 c
644.86006 553.35260 640.30932 550.45361 634.94929 548.43109 c
629.58954 546.37483 623.55543 545.36343 616.84724 545.36343 c
610.40863 545.36343 604.54318 546.34110 599.31808 548.32989 c
594.09298 550.28523 589.64343 553.08302 585.96888 556.65638 c
582.26088 560.26318 579.42935 564.61181 577.40683 569.76945 c
575.41776 574.89335 574.40665 580.62387 574.40665 586.96129 c
574.40665 593.73694 575.41776 599.77106 577.47402 605.13109 c
579.49682 610.45710 582.46328 614.97411 586.30620 618.71613 c
590.14913 622.42413 594.83480 625.25565 600.32948 627.21099 c
605.79043 629.13231 611.99291 630.10998 618.90350 630.10998 c
625.57795 630.10998 631.44340 629.16605 636.56731 627.24472 c
641.72494 625.32312 646.03984 622.55906 649.54573 618.95197 c
653.08507 615.31143 655.74822 610.92907 657.60236 605.70397 c
659.45622 600.51260 660.36643 594.61342 660.36643 588.04016 c
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
719.05521 630.10998 m
721.28013 630.10998 723.43757 629.87386 725.49383 629.36844 c
727.58381 628.86274 729.67380 628.22211 731.76378 627.44683 C
731.76378 612.04139 L
729.53915 612.58082 727.14557 612.95159 724.65109 613.18772 c
722.15660 613.42356 719.79704 613.52476 717.57213 613.52476 c
715.07764 613.52476 712.95392 612.98532 711.20098 611.90674 c
709.44803 610.79414 708.06586 609.37852 707.02101 607.55811 c
705.97587 605.73770 705.20060 603.64772 704.72863 601.22069 c
704.29039 598.82712 704.05455 596.29890 704.05455 593.66976 c
704.05455 547.18384 L
685.04202 547.18384 L
685.04202 601.01830 l
685.04202 603.44561 684.94110 606.04101 684.73871 608.73789 c
684.53631 611.43477 684.30047 614.03046 683.99717 616.52494 c
683.72731 619.05317 683.39027 621.31181 683.01950 623.40180 c
682.68246 625.45805 682.34542 627.10980 682.00809 628.28957 C
698.02044 628.28957 L
698.35748 627.68296 698.69452 626.90740 699.03156 625.86255 c
699.33515 624.85115 699.67219 623.73883 699.94176 622.52532 c
700.24535 621.31181 700.51493 619.99710 700.78450 618.61493 c
701.05436 617.23276 701.25647 615.88431 701.39140 614.56961 C
702.36907 616.22164 703.41392 617.94057 704.52624 619.76098 c
705.67257 621.54765 706.95354 623.23313 708.40290 624.78369 c
709.81880 626.33452 711.43682 627.61550 713.15603 628.59288 c
714.90898 629.60428 716.86403 630.10998 719.05521 630.10998 c
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
787.78942 615.34517 m
781.45200 615.34517 776.29436 613.76060 772.31679 610.55830 c
768.30520 607.35572 765.67578 602.67005 764.36107 596.53502 C
807.23991 596.53502 L
806.90287 602.67005 805.08274 607.35572 801.71150 610.55830 c
798.34054 613.76060 793.68860 615.34517 787.78942 615.34517 c
@c
745.55121 588.24227 m
745.55121 594.47877 746.56233 600.20929 748.61858 605.36693 c
750.64139 610.52457 753.54038 614.94066 757.24838 618.61493 c
760.99011 622.25546 765.43994 625.08728 770.63131 627.10980 c
775.85613 629.09858 781.62066 630.10998 788.02554 630.10998 c
794.26176 630.10998 799.75644 629.19978 804.47584 627.41310 c
809.16151 625.59269 813.13937 622.99729 816.37540 619.65978 c
819.61143 616.32255 822.00501 612.21005 823.62302 607.32198 c
825.24104 602.46794 826.05005 596.97326 826.05005 590.87169 c
826.05005 582.78132 L
763.95657 582.78132 L
764.29389 579.41036 765.17008 576.30898 766.58598 573.44372 c
768.00189 570.54472 769.88948 568.08397 772.31679 566.06145 c
774.71008 564.00491 777.54161 562.42063 780.81165 561.24085 c
784.04769 560.09480 787.65477 559.52164 791.59861 559.52164 c
793.92472 559.52164 796.35175 559.72375 798.98117 560.16198 c
801.57685 560.60022 804.24000 561.20712 806.97033 562.04986 c
809.70094 562.85887 812.43128 563.87027 815.16189 565.08378 c
817.89222 566.26356 820.52164 567.64573 823.01613 569.23002 C
823.01613 554.26280 L
818.02715 551.43128 812.73487 549.24009 807.17272 547.68954 c
801.61058 546.13871 795.27317 545.36343 788.19392 545.36343 c
781.58693 545.36343 775.68775 546.34110 770.42891 548.26243 c
765.17008 550.21776 760.68680 553.04929 757.01254 556.72384 c
753.30425 560.39811 750.47272 564.91512 748.51767 570.20769 c
746.52860 575.49997 745.55121 581.50035 745.55121 588.24227 c
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
922.15672 547.18384 m
903.14447 547.18384 L
903.14447 597.37776 l
903.14447 603.10828 902.03216 607.49065 899.84098 610.55830 c
897.61606 613.62595 894.27883 615.14277 889.82901 615.14277 c
887.77276 615.14277 885.78397 614.83946 883.79518 614.19883 c
881.80611 613.59222 879.95225 612.81694 878.19931 611.87301 c
876.48009 610.96280 874.86208 609.95140 873.41244 608.87282 c
871.96280 607.79395 870.74929 606.78283 869.77191 605.87263 C
869.77191 547.18384 L
850.75937 547.18384 L
850.75937 628.28957 L
869.16501 628.28957 L
869.56951 620.19921 L
870.95169 621.37899 872.50224 622.59279 874.22145 623.80630 c
875.90693 625.01981 877.79480 626.09839 879.81732 627.00860 c
881.87357 627.91880 884.03102 628.66035 886.28967 629.23351 c
888.54803 629.80668 890.94161 630.10998 893.43609 630.10998 c
899.57112 630.10998 904.66129 628.93020 908.77408 626.57036 c
912.88658 624.17707 915.98797 620.94076 918.11169 616.76079 C
919.76343 618.34535 921.61757 619.96337 923.70756 621.58139 c
925.76381 623.16567 927.98872 624.61531 930.34828 625.86255 c
932.74157 627.10980 935.23606 628.12120 937.83175 628.93020 c
940.42743 629.70548 943.09058 630.10998 945.78746 630.10998 c
955.52957 630.10998 962.74346 627.31191 967.36167 621.68258 c
972.01361 616.05298 974.33943 608.13128 974.33943 597.91720 c
974.33943 547.18384 L
955.32718 547.18384 L
955.32718 597.37776 l
955.32718 603.10828 954.21487 607.49065 952.02369 610.55830 c
949.79877 613.62595 946.52901 615.14277 942.14665 615.14277 c
939.92173 615.14277 937.76457 614.77200 935.67430 614.06419 c
933.58431 613.32236 931.66299 612.44589 929.87631 611.40104 c
928.08964 610.32217 926.50535 609.17613 925.08945 607.92888 c
923.67383 606.68164 922.52750 605.53559 921.65102 604.49046 C
921.78595 603.74891 921.92088 602.70378 922.02208 601.35562 c
922.12299 600.00718 922.15672 598.86085 922.15672 597.95093 c
922.15672 547.18384 L
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
1067.54712 547.18384 m
1048.13036 547.18384 L
1048.13036 675.01134 L
1067.54712 675.01134 L
1067.54712 547.18384 L
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
1119.32532 565.15124 m
1120.10060 564.47688 1121.11172 563.80280 1122.29178 563.12844 c
1123.47156 562.42063 1124.82000 561.81402 1126.37055 561.24085 c
1127.92110 560.70142 1129.64031 560.22945 1131.56192 559.85868 c
1133.44951 559.48791 1135.50576 559.31924 1137.66321 559.31924 c
1141.74227 559.31924 1145.38280 559.99361 1148.51792 561.30831 c
1151.68649 562.62302 1154.38337 564.51061 1156.60828 567.03883 c
1158.83320 569.53332 1160.55241 572.60098 1161.69846 576.20806 c
1162.84450 579.84860 1163.41767 583.92765 1163.41767 588.47839 c
1163.41767 592.75956 1162.87824 596.56876 1161.83339 599.93972 c
1160.78825 603.31068 1159.30488 606.14220 1157.34983 608.50205 c
1155.42850 610.82787 1153.10239 612.61455 1150.43924 613.86180 c
1147.77638 615.10904 1144.87710 615.74967 1141.70854 615.74967 c
1139.14658 615.74967 1136.75329 615.47981 1134.56211 614.90693 c
1132.37093 614.33376 1130.31468 613.59222 1128.46054 612.68202 c
1126.57266 611.77181 1124.88718 610.72668 1123.37036 609.61436 c
1121.85354 608.50205 1120.50510 607.38945 1119.32532 606.27713 C
1119.32532 565.15124 L
@c
1100.31279 628.28957 m
1118.92082 628.28957 L
1119.32532 621.07569 L
1122.49389 623.50271 1126.16816 625.62643 1130.38214 627.41310 c
1134.59584 629.19978 1139.48362 630.10998 1145.01203 630.10998 c
1150.33833 630.10998 1155.29357 629.19978 1159.91178 627.37937 c
1164.52998 625.59269 1168.50784 622.92983 1171.87880 619.39020 c
1175.21603 615.88431 1177.84545 611.50224 1179.76677 606.31087 c
1181.68838 601.11950 1182.63231 595.08539 1182.63231 588.24227 c
1182.63231 581.90485 1181.72211 576.14060 1179.86797 570.91550 c
1178.01383 565.65694 1175.35096 561.17339 1171.81134 557.43165 c
1168.30545 553.65619 1163.95710 550.75720 1158.83320 548.66721 c
1153.70929 546.61068 1147.87729 545.56583 1141.33776 545.56583 c
1137.25871 545.56583 1133.28113 546.03780 1129.40447 546.94800 c
1125.52781 547.85792 1122.15685 549.10517 1119.32532 550.58854 C
1119.32532 500.46208 L
1100.31279 500.46208 L
1100.31279 628.28957 L
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
1255.20917 569.97156 m
1255.20917 566.46595 1254.60255 563.22964 1253.38904 560.22945 c
1252.17553 557.22926 1250.32139 554.63357 1247.86063 552.44268 c
1245.39987 550.21776 1242.29849 548.49855 1238.55676 547.25131 c
1234.84847 546.00406 1230.50013 545.36343 1225.47713 545.36343 c
1220.62309 545.36343 1216.00488 545.97033 1211.65625 547.18384 c
1207.30762 548.43109 1203.63335 550.15030 1200.59943 552.40894 C
1200.59943 568.82551 L
1202.31865 567.64573 1204.20652 566.49969 1206.26277 565.35335 c
1208.35276 564.24104 1210.47647 563.26337 1212.63392 562.45436 c
1214.82510 561.61162 1216.94882 560.97128 1219.03880 560.46557 c
1221.16252 559.95987 1223.08384 559.72375 1224.87052 559.72375 c
1229.15169 559.72375 1232.28652 560.63395 1234.24186 562.48809 c
1236.23065 564.30850 1237.20831 566.53313 1237.20831 569.16255 c
1237.20831 570.54472 1237.00592 571.79197 1236.60142 572.87083 c
1236.23065 573.94942 1235.48910 574.99455 1234.41024 575.93820 c
1233.29792 576.88214 1231.81483 577.82608 1229.85950 578.73628 c
1227.90444 579.68022 1225.44369 580.65761 1222.40976 581.70274 c
1218.26324 583.21956 1214.79137 584.83757 1211.99329 586.48932 c
1209.19550 588.17509 1206.97058 590.02894 1205.28510 592.01773 c
1203.59962 594.04054 1202.41984 596.23172 1201.67802 598.55754 c
1200.97020 600.88365 1200.59943 603.44561 1200.59943 606.20967 c
1200.59943 609.74929 1201.37471 613.01906 1202.92554 615.95178 c
1204.47609 618.85077 1206.56608 621.37899 1209.22923 623.50271 c
1211.89209 625.59269 1215.02721 627.24472 1218.63430 628.39077 c
1222.20737 629.53682 1226.05030 630.10998 1230.12935 630.10998 c
1233.80362 630.10998 1237.44416 629.73921 1240.98378 629.03112 c
1244.55713 628.28957 1247.99528 627.04233 1251.36652 625.28939 C
1251.36652 610.49083 L
1248.13020 611.94047 1244.72551 613.15398 1241.15244 614.09792 c
1237.54535 615.07531 1234.00573 615.54728 1230.53386 615.54728 c
1226.45480 615.54728 1223.38715 614.67080 1221.29717 612.95159 c
1219.24091 611.23238 1218.19606 609.04120 1218.19606 606.41206 c
1218.19606 605.29946 1218.39817 604.22088 1218.83641 603.24321 c
1219.27465 602.26554 1220.01619 601.28816 1221.06132 600.37795 c
1222.10617 599.46775 1223.55581 598.52381 1225.40995 597.57987 c
1227.23008 596.60249 1229.58992 595.62482 1232.42145 594.64715 c
1236.36557 593.26526 1239.77027 591.81562 1242.63553 590.26507 c
1245.50079 588.71424 1247.86063 586.99502 1249.74822 585.07370 c
1251.60236 583.15209 1252.98454 580.96120 1253.86101 578.50016 c
1254.77121 576.03940 1255.20917 573.17414 1255.20917 569.97156 c
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
1276.07584 628.28957 m
1295.08809 628.28957 L
1295.08809 578.09565 l
1295.08809 572.43260 1296.26787 568.08397 1298.59398 564.98258 c
1300.95354 561.88120 1304.49317 560.33065 1309.21257 560.33065 c
1311.33628 560.33065 1313.39254 560.60022 1315.41506 561.10592 c
1317.40384 561.64535 1319.29172 562.35317 1321.07839 563.22964 c
1322.86479 564.13984 1324.51682 565.11751 1326.06737 566.19609 c
1327.61792 567.30869 1329.03383 568.42101 1330.28107 569.60079 C
1330.28107 628.28957 L
1349.29332 628.28957 L
1349.29332 547.18384 L
1330.88797 547.18384 L
1330.28107 555.27420 L
1328.89890 554.02696 1327.34835 552.81345 1325.62913 551.63367 c
1323.94365 550.45361 1322.02205 549.37502 1319.96580 548.46482 c
1317.87581 547.55461 1315.65090 546.81307 1313.25761 546.23991 c
1310.83058 545.66702 1308.30236 545.36343 1305.60548 545.36343 c
1295.52633 545.36343 1288.07631 548.06031 1283.28973 553.42006 c
1278.46913 558.78009 1276.07584 566.60060 1276.07584 576.88214 c
1276.07584 628.28957 L
@c
F

@rax %Note: Object
496.77307 500.46208 1503.21231 675.01134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
1451.02961 547.18384 m
1432.01735 547.18384 L
1432.01735 597.37776 l
1432.01735 603.10828 1430.90504 607.49065 1428.71386 610.55830 c
1426.48894 613.62595 1423.15172 615.14277 1418.70189 615.14277 c
1416.64564 615.14277 1414.65685 614.83946 1412.66806 614.19883 c
1410.67899 613.59222 1408.82513 612.81694 1407.07219 611.87301 c
1405.35298 610.96280 1403.73496 609.95140 1402.28532 608.87282 c
1400.83569 607.79395 1399.62217 606.78283 1398.64479 605.87263 C
1398.64479 547.18384 L
1379.63225 547.18384 L
1379.63225 628.28957 L
1398.03789 628.28957 L
1398.44239 620.19921 L
1399.82457 621.37899 1401.37512 622.59279 1403.09433 623.80630 c
1404.77981 625.01981 1406.66769 626.09839 1408.69020 627.00860 c
1410.74646 627.91880 1412.90391 628.66035 1415.16255 629.23351 c
1417.42091 629.80668 1419.81449 630.10998 1422.30898 630.10998 c
1428.44400 630.10998 1433.53417 628.93020 1437.64696 626.57036 c
1441.75946 624.17707 1444.86085 620.94076 1446.98457 616.76079 C
1448.63631 618.34535 1450.49046 619.96337 1452.58044 621.58139 c
1454.63669 623.16567 1456.86161 624.61531 1459.22117 625.86255 c
1461.61446 627.10980 1464.10894 628.12120 1466.70463 628.93020 c
1469.30031 629.70548 1471.96346 630.10998 1474.66035 630.10998 c
1484.40246 630.10998 1491.61635 627.31191 1496.23455 621.68258 c
1500.88649 616.05298 1503.21231 608.13128 1503.21231 597.91720 c
1503.21231 547.18384 L
1484.20006 547.18384 L
1484.20006 597.37776 l
1484.20006 603.10828 1483.08775 607.49065 1480.89657 610.55830 c
1478.67165 613.62595 1475.40189 615.14277 1471.01953 615.14277 c
1468.79461 615.14277 1466.63745 614.77200 1464.54718 614.06419 c
1462.45720 613.32236 1460.53587 612.44589 1458.74920 611.40104 c
1456.96252 610.32217 1455.37824 609.17613 1453.96233 607.92888 c
1452.54671 606.68164 1451.40038 605.53559 1450.52391 604.49046 C
1450.65883 603.74891 1450.79376 602.70378 1450.89496 601.35562 c
1450.99587 600.00718 1451.02961 598.86085 1451.02961 597.95093 c
1451.02961 547.18384 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel17Dict 17.0 0
%%EOF
